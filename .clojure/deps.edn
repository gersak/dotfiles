;; see https://github.com/seancorfield/dot-clojure
{:mvn/repos {"sonatype" {:url "https://oss.sonatype.org/content/repositories/snapshots/"}}
 :aliases
 {;; pull in specific versions of Clojure:
  :1.2 {:override-deps {org.clojure/clojure {:mvn/version "1.2.1"}}}
  :1.3 {:override-deps {org.clojure/clojure {:mvn/version "1.3.0"}}}
  :1.4 {:override-deps {org.clojure/clojure {:mvn/version "1.4.0"}}}
  :1.5 {:override-deps {org.clojure/clojure {:mvn/version "1.5.1"}}}
  :1.6 {:override-deps {org.clojure/clojure {:mvn/version "1.6.0"}}}
  :1.7 {:override-deps {org.clojure/clojure {:mvn/version "1.7.0"}}}
  :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
  :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
  :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}}
  :1.10.1 {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
  :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}

  ;; testing and debugging tools:
  :test {:extra-paths ["test" "src/test/clojure"]
         :extra-deps {org.clojure/test.check {:mvn/version "RELEASE"}}}
  ;; - see https://github.com/cognitect-labs/test-runner
  ;; - run your tests: clj -A:test:runner
  :runner {:extra-deps {com.cognitect/test-runner
                        {:git/url "https://github.com/cognitect-labs/test-runner"
                         :sha "3cb0a9daf1cb746259dc8309b218f9211ad3b33b"}}
           :main-opts ["-m" "cognitect.test-runner"
                       "-d" "test"
                       "-d" "src/test/clojure"]}
  ;; see https://github.com/jonase/eastwood#running-eastwood-in-a-repl
  :eastwood {:extra-deps {jonase/eastwood {:mvn/version "RELEASE"}}
             :main-opts ["-m" "eastwood.lint" "{:source-paths,[\"src\"],:test-paths,[\"test\"]}"]}

  ;; - see https://github.com/clojure-expectations/expectations
  ;; - run your expectations: clj -A:test:expect:runner
  :expect {:extra-deps {expectations/expectations {:mvn/version "RELEASE"}}}
  ;; - see https://github.com/hugoduncan/criterium/
  ;; - (require '[criterium.core :refer [bench]])
  ;; - (bench (your-expression))
  :bench {:extra-deps {criterium/criterium {:mvn/version "RELEASE"}}}
  ;; - see https://github.com/clojure-goes-fast/clj-memory-meter
  ;; - (require '[clj-memory-meter.core :as mm])
  ;; - (mm/measure (your-expression))
  :measure {:extra-deps {com.clojure-goes-fast/clj-memory-meter {:mvn/version "RELEASE"}}}
  ;; - see https://github.com/Olical/depot
  :outdated {:extra-deps {olical/depot {:mvn/version "RELEASE"}}
             :main-opts ["-m" "depot.outdated.main"]}

  ;; REPL-related tools:
  ;; - start a modern nREPL server on a random available port:
  :nrepl {:extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}}
          :main-opts ["-m" "nrepl.cmdline"]}

  :cider {:extra-deps {cider/cider-nrepl {:mvn/version "0.26.0"}}}

  ;; - start a Socket REPL on port 50505:
  :socket {:jvm-opts ["-Dclojure.server.repl={:port,50505,:accept,clojure.core.server/repl}"]}
  ;; - start a Socket pREPL on port 5677
  :prepl {:jvm-opts ["-Dclojure.server.repl={:port,5677,:accept,clojure.core.server/io-prepl}"]}
  ;; - see https://atom.io/packages/proto-repl
  ;; - for use with Atom/ProtoREPL: clj -A:proto:nrepl
  ;;
  :proto {:extra-deps {proto-repl/proto-repl {:mvn/version "RELEASE"}}}
  ;; - see https://github.com/bhauman/rebel-readline
  ;; - start a Rebel Readline REPL:
  :rebel {:extra-deps {com.bhauman/rebel-readline {:mvn/version "RELEASE"}}
          :main-opts ["-m" "rebel-readline.main"]}
  ;; - see https://github.com/stuarthalloway/reflector
  ;; - my fork includes this https://github.com/stuarthalloway/reflector/pull/1
  :reflect
  {:extra-deps {com.stuarthalloway/reflector
                {:git/url "https://github.com/seancorfield/reflector"
                 :sha "67d81dbdcab64956abffc128f47b837a2d707b58"}}}
  ;; - see https://github.com/bbatsov/compliment
  :comp {:extra-deps {compliment/compliment {:mvn/version "RELEASE"}}}
  ;; - see https://github.com/cognitect-labs/REBL-distro
  ;; - you need to download the REBL JAR (and update the local/root below)
  ;; - you need to be using Clojure 1.10 and either
  ;; - - Oracle JDK 8 -- use :rebl-8
  ;; - - OpenJDK 11 -- use :rebl-11
  :rebl-8
  {:extra-deps {org.clojure/core.async {:mvn/version "0.4.490"}
                ;; deps for file datafication (0.9.149 or later)
                org.clojure/data.csv {:mvn/version "0.1.4"}
                org.clojure/data.json {:mvn/version "0.2.3"}
                org.yaml/snakeyaml {:mvn/version "1.23"}
                com.cognitect/rebl
                ;; adjust to match your install location
                {:local/root "/Developer/REBL/latest/REBL.jar"}}
   :main-opts ["-m" "cognitect.rebl"]}
  :rebl-11
  {:extra-deps {org.clojure/core.async {:mvn/version "0.4.490"}
                ;; deps for file datafication (0.9.149 or later)
                org.clojure/data.csv {:mvn/version "0.1.4"}
                org.clojure/data.json {:mvn/version "0.2.3"}
                org.yaml/snakeyaml {:mvn/version "1.23"}
                com.cognitect/rebl
                ;; adjust to match your install location
                {:local/root "/Developer/REBL/latest/REBL.jar"}
                org.openjfx/javafx-fxml     {:mvn/version "11.0.1"}
                org.openjfx/javafx-controls {:mvn/version "11.0.1"}
                org.openjfx/javafx-graphics {:mvn/version "11.0.1"}
                org.openjfx/javafx-media    {:mvn/version "11.0.1"}
                org.openjfx/javafx-swing    {:mvn/version "11.0.1"}
                org.openjfx/javafx-base     {:mvn/version "11.0.1"}
                org.openjfx/javafx-web      {:mvn/version "11.0.1"}}
   :main-opts ["-m" "cognitect.rebl"]}
  :tubular
  {:extra-deps {tubular/tubular {:mvn/version "1.3.0"}}}
  :reply
  {:extra-deps {reply/reply {:mvn/version "0.4.3"}}}

  ;; start the Liquid Clojure editor
  ;; - see https://github.com/mogenslund/liquid
  :liquid
  {:extra-deps {mogenslund/liquid {:mvn/version "RELEASE"}}
   :main-opts ["-m" "dk.salza.liq.core"]}}}
